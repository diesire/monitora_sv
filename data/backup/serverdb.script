SET DATABASE UNIQUE NAME HSQLDB3A0390C876
SET DATABASE GC 0
SET DATABASE DEFAULT RESULT MEMORY ROWS 0
SET DATABASE EVENT LOG LEVEL 0
SET DATABASE TRANSACTION CONTROL LOCKS
SET DATABASE DEFAULT ISOLATION LEVEL READ COMMITTED
SET DATABASE TRANSACTION ROLLBACK ON CONFLICT TRUE
SET DATABASE TEXT TABLE DEFAULTS ''
SET DATABASE SQL NAMES FALSE
SET DATABASE SQL REFERENCES FALSE
SET DATABASE SQL SIZE FALSE
SET DATABASE SQL TYPES FALSE
SET DATABASE SQL TDC DELETE TRUE
SET DATABASE SQL TDC UPDATE TRUE
SET DATABASE SQL TRANSLATE TTI TYPES TRUE
SET DATABASE SQL CONCAT NULLS TRUE
SET DATABASE SQL UNIQUE NULLS TRUE
SET DATABASE SQL CONVERT TRUNCATE TRUE
SET DATABASE SQL AVG SCALE 0
SET DATABASE SQL DOUBLE NAN TRUE
SET DATABASE SQL SYNTAX ORA TRUE
SET FILES WRITE DELAY 10
SET FILES BACKUP INCREMENT FALSE
SET FILES CACHE SIZE 10000
SET FILES CACHE ROWS 50000
SET FILES SCALE 1
SET FILES LOB SCALE 32
SET FILES DEFRAG 0
SET FILES NIO TRUE
SET FILES NIO SIZE 256
SET FILES LOG TRUE
SET FILES LOG SIZE 200
CREATE USER SA PASSWORD DIGEST 'd41d8cd98f00b204e9800998ecf8427e'
CREATE SCHEMA PUBLIC AUTHORIZATION DBA
SET SCHEMA PUBLIC
CREATE SEQUENCE PUBLIC.CLI_ID_CLIENTE_SEQ AS INTEGER START WITH 1
CREATE SEQUENCE PUBLIC.CONS_CONS_ID_SEQ AS INTEGER START WITH 1
CREATE SEQUENCE PUBLIC.INFO_INFO_ID_SEQ AS INTEGER START WITH 1
CREATE SEQUENCE PUBLIC.LINEA_CRON_ID_LINEA_CRON_SEQ AS INTEGER START WITH 1
CREATE SEQUENCE PUBLIC.PLAN_ID_PLAN_SEQ AS INTEGER START WITH 1
CREATE SEQUENCE PUBLIC.TIPO_DEST_ID_TI_DEST_SEQ AS INTEGER START WITH 1
CREATE SEQUENCE PUBLIC.AGENTE_AGENTE_ID_SEQ AS INTEGER START WITH 1
CREATE SEQUENCE PUBLIC.DESTINO_ID_DESTINO_SEQ AS INTEGER START WITH 1
CREATE SEQUENCE PUBLIC.TCON_1_ID_CLIENTE AS INTEGER START WITH 1
CREATE MEMORY TABLE PUBLIC.AGENTE(AGENTE_ID INTEGER NOT NULL,ID_CLIENTE INTEGER NOT NULL,IP_AGENTE VARCHAR(15),COMENTARIOS CLOB(1G),CONSTRAINT AGENTE_PK PRIMARY KEY(AGENTE_ID))
CREATE INDEX AGENTE_CLI_FKX ON PUBLIC.AGENTE(ID_CLIENTE)
CREATE MEMORY TABLE PUBLIC.AGENTE_DESTINO(ID_AGENTE INTEGER CONSTRAINT NNC_AGEN_DEST_ID_AGENTE NOT NULL,ID_CLIENTE INTEGER CONSTRAINT NNC_AGEN_DEST_ID_CLIENTE NOT NULL,ID_DESTINO INTEGER CONSTRAINT NNC_AGEN_DEST_ID_DESTINO NOT NULL,CONSTRAINT AGENTE_DESTINO_PK PRIMARY KEY(ID_AGENTE,ID_DESTINO,ID_CLIENTE),CONSTRAINT AGEN_DEST_AGENTE_FK FOREIGN KEY(ID_AGENTE) REFERENCES PUBLIC.AGENTE(AGENTE_ID))
CREATE INDEX AGEN_DEST_AGENTE_FKX ON PUBLIC.AGENTE_DESTINO(ID_AGENTE)
CREATE INDEX AGEN_DEST_DEST_FKX ON PUBLIC.AGENTE_DESTINO(ID_CLIENTE,ID_DESTINO)
CREATE MEMORY TABLE PUBLIC.CLIENTE(ID_CLIENTE INTEGER CONSTRAINT NNC_CLI_ID_CLIENTE NOT NULL,NOMBRE VARCHAR(1000) CONSTRAINT NNC_CLI_NOMBRE NOT NULL,LOGO BLOB(1G),CONSTRAINT CLIENTE_PK PRIMARY KEY(ID_CLIENTE))
CREATE MEMORY TABLE PUBLIC.CONSULTA(CONS_ID INTEGER CONSTRAINT NNC_CONS_ID_CONSULTA NOT NULL,TIPO CHARACTER(1) CONSTRAINT NNC_CONS_TIPO NOT NULL,SQL_SELECT CLOB(1G),SQL_INSERT VARCHAR(4000),SQL_DELETE VARCHAR(4000),TABLA CLOB(1G),SQL_CREATE VARCHAR(4000),COMANDO_SO VARCHAR(500),DESC_CORTA VARCHAR(2000) CONSTRAINT NNC_CONS_DESC_CORTA NOT NULL,DESC_LARGA VARCHAR(4000) CONSTRAINT NNC_CONS_DESC_LARGA NOT NULL,F_ULTIMA_MODIFICACION DATE DEFAULT SYSDATE CONSTRAINT NNC_CONS_F_ULTIMA_MODIFICACION NOT NULL,CONSTRAINT CONSULTA_PK PRIMARY KEY(CONS_ID),CONSTRAINT CONS_TIPO_CK CHECK((PUBLIC.CONSULTA.TIPO) IN (('B'),('S'))))
CREATE MEMORY TABLE PUBLIC.CONSULTA_TIPO_DESTINO(ID_CONSULTA INTEGER CONSTRAINT NNC_ID_CONSULTA NOT NULL,ID_TIPO_DESTINO INTEGER CONSTRAINT NNC_ID_TIPO_DESTINO NOT NULL,CONSTRAINT CONSULTA_TIPO_DESTINO_PK PRIMARY KEY(ID_CONSULTA,ID_TIPO_DESTINO),CONSTRAINT CONS_TIPO_DEST_CONS_FK FOREIGN KEY(ID_CONSULTA) REFERENCES PUBLIC.CONSULTA(CONS_ID))
CREATE INDEX CONS_TIPO_DEST_CONS_FKX ON PUBLIC.CONSULTA_TIPO_DESTINO(ID_CONSULTA)
CREATE INDEX CONS_TIPO_DEST_TIPO_DEST_FKX ON PUBLIC.CONSULTA_TIPO_DESTINO(ID_TIPO_DESTINO)
CREATE MEMORY TABLE PUBLIC.DESTINO(ID_CLIENTE INTEGER CONSTRAINT NNC_DEST_ID_CLIENTE NOT NULL,ID_DESTINO INTEGER CONSTRAINT NNC_DEST_ID_DESTINO NOT NULL,ID_TIPO_DESTINO INTEGER NOT NULL,CONSTRAINT DESTINO_PK PRIMARY KEY(ID_CLIENTE,ID_DESTINO),CONSTRAINT DESTINO_A_CLIENTE_FK FOREIGN KEY(ID_CLIENTE) REFERENCES PUBLIC.CLIENTE(ID_CLIENTE))
CREATE INDEX DESTINO_A_CLIENTE_FKX ON PUBLIC.DESTINO(ID_CLIENTE)
CREATE INDEX DESTINO_A_TIPO_DESTINO_FKX ON PUBLIC.DESTINO(ID_TIPO_DESTINO)
CREATE MEMORY TABLE PUBLIC.INFORME(INFO_ID INTEGER CONSTRAINT NNC_ID_INFORME NOT NULL,NOMBRE VARCHAR(1000) CONSTRAINT NNC_NOMBRE NOT NULL,DESC_LARGA VARCHAR(4000) CONSTRAINT NNC_DESC_LARGA NOT NULL,F_ULTIMA_MODIFICACION DATE DEFAULT SYSDATE CONSTRAINT NNC_F_ULTIMA_MODIFICACION NOT NULL,CONSTRAINT INFORME_PK PRIMARY KEY(INFO_ID))
CREATE MEMORY TABLE PUBLIC.INFORME_CONSULTA(ID_CONSULTA INTEGER CONSTRAINT NNC_INNF_CONS_ID_CONSULTA NOT NULL,ID_INFORME INTEGER CONSTRAINT NNC_INNF_CONS_ID_INFORME NOT NULL,F_ULTIMA_MODIFICACION DATE DEFAULT SYSDATE CONSTRAINT NNC_INNF_CONS_F_ULT_MOD NOT NULL,CONSTRAINT INFORME_CONSULTA_PK PRIMARY KEY(ID_CONSULTA,ID_INFORME),CONSTRAINT INNF_CONS_CONS_FK FOREIGN KEY(ID_CONSULTA) REFERENCES PUBLIC.CONSULTA(CONS_ID),CONSTRAINT INNF_CONS_INFO_FK FOREIGN KEY(ID_INFORME) REFERENCES PUBLIC.INFORME(INFO_ID))
CREATE INDEX INNF_CONS_CONS_FKX ON PUBLIC.INFORME_CONSULTA(ID_CONSULTA)
CREATE INDEX INNF_CONS_INFO_FKX ON PUBLIC.INFORME_CONSULTA(ID_INFORME)
CREATE MEMORY TABLE PUBLIC.INFORME_INFORME(ID_INFORME_CONTIENE INTEGER CONSTRAINT NNC_ID_INFORME_CONTIENE NOT NULL,ID_INFORME_CONTENIDO INTEGER CONSTRAINT NNC_ID_INFORME_CONTENIDO NOT NULL,CONSTRAINT INFORME_INFORME_PK PRIMARY KEY(ID_INFORME_CONTIENE,ID_INFORME_CONTENIDO),CONSTRAINT INF_INF_INFO_FK FOREIGN KEY(ID_INFORME_CONTENIDO) REFERENCES PUBLIC.INFORME(INFO_ID),CONSTRAINT INF_INF_INFO_FKV1 FOREIGN KEY(ID_INFORME_CONTIENE) REFERENCES PUBLIC.INFORME(INFO_ID))
CREATE INDEX INF_INF_INFO_FKV1X ON PUBLIC.INFORME_INFORME(ID_INFORME_CONTIENE)
CREATE INDEX INF_INF_INFO_FKX ON PUBLIC.INFORME_INFORME(ID_INFORME_CONTENIDO)
CREATE MEMORY TABLE PUBLIC.INFORME_TIPO_DESTINO(ID_INFORME INTEGER CONSTRAINT NNC_INF_TIPO_DEST_ID_INFORME NOT NULL,ID_TIPO_DESTINO INTEGER CONSTRAINT NNC_INF_TIPO_DEST_ID_TI_DEST NOT NULL,POR_DEFECTO CHARACTER(1) CONSTRAINT NNC_INF_TIPO_DEST_POR_DEFECTO NOT NULL,CONSTRAINT INFORME_TIPO_DESTINO_PK PRIMARY KEY(ID_INFORME,ID_TIPO_DESTINO),CONSTRAINT INF_TIPO_DEST_POR_DEFECTO_CK CHECK((PUBLIC.INFORME_TIPO_DESTINO.POR_DEFECTO) IN (('N'),('S'))),CONSTRAINT INF_TIPO_DEST_INFO_FK FOREIGN KEY(ID_INFORME) REFERENCES PUBLIC.INFORME(INFO_ID))
CREATE INDEX INF_TIPO_DEST_INFO_FKX ON PUBLIC.INFORME_TIPO_DESTINO(ID_INFORME)
CREATE INDEX INF_TIPO_DEST_TIPO_DEST_FKX ON PUBLIC.INFORME_TIPO_DESTINO(ID_TIPO_DESTINO)
CREATE MEMORY TABLE PUBLIC.INF_PLAN_DEST(ID_INFORME INTEGER CONSTRAINT NNC_INF_PLAN_DEST_ID_INFORME NOT NULL,ID_CLIENTE INTEGER CONSTRAINT NNC_INF_PLAN_DEST_ID_CLIENTE NOT NULL,ID_DESTINO INTEGER CONSTRAINT NNC_INF_PLAN_DEST_ID_DESTINO NOT NULL,ID_PLAN INTEGER CONSTRAINT NNC_INF_PLAN_DEST_ID_PLAN NOT NULL,F_ULTIMA_MODIFICACION DATE DEFAULT SYSDATE CONSTRAINT NNC_INF_PLAN_DEST_F_ULT_MOD NOT NULL,F_ULTIMA_APLICACION DATE DEFAULT SYSDATE CONSTRAINT NNC_INF_PLAN_DEST_F_ULT_APLI NOT NULL,CONSTRAINT INF_PLAN_DEST_PK PRIMARY KEY(ID_INFORME,ID_CLIENTE,ID_DESTINO),CONSTRAINT INF_PLAN_DEST_DEST_FK FOREIGN KEY(ID_CLIENTE,ID_DESTINO) REFERENCES PUBLIC.DESTINO(ID_CLIENTE,ID_DESTINO),CONSTRAINT INF_PLAN_DEST_INFO_FK FOREIGN KEY(ID_INFORME) REFERENCES PUBLIC.INFORME(INFO_ID))
CREATE INDEX INF_PLAN_DEST_DEST_FKX ON PUBLIC.INF_PLAN_DEST(ID_CLIENTE,ID_DESTINO)
CREATE INDEX INF_PLAN_DEST_INFO_FKX ON PUBLIC.INF_PLAN_DEST(ID_INFORME)
CREATE INDEX INF_PLAN_DEST_PLAN_FKX ON PUBLIC.INF_PLAN_DEST(ID_PLAN)
CREATE MEMORY TABLE PUBLIC.INF_PLAN_DEST_BORRADO(ID_INFORME INTEGER NOT NULL,ID_CLIENTE INTEGER NOT NULL,ID_DESTINO INTEGER NOT NULL,ID_PLAN INTEGER NOT NULL,CONSTRAINT INF_PLAN_DEST_BORRADO_PK PRIMARY KEY(ID_INFORME,ID_CLIENTE,ID_DESTINO,ID_PLAN))
CREATE MEMORY TABLE PUBLIC.LINEA_CRON(ID_LINEA_CRON INTEGER NOT NULL,ID_PLAN INTEGER NOT NULL,DESCRIPCION VARCHAR(2000) NOT NULL,EXPRESION VARCHAR(2000) NOT NULL,F_ULTIMA_MODIFICACION DATE DEFAULT SYSDATE NOT NULL,CONSTRAINT LINEA_CRON_PK PRIMARY KEY(ID_LINEA_CRON))
CREATE INDEX LINEA_CRON_A_PLANIFICACION_FKX ON PUBLIC.LINEA_CRON(ID_PLAN)
CREATE MEMORY TABLE PUBLIC.LOG_ERROR(LOG_ID INTEGER CONSTRAINT NNC_LOG_ERROR_LOG_ID NOT NULL,FECHA DATE NOT NULL,MODULO VARCHAR(30) NOT NULL,CODIGO INTEGER NOT NULL,DESCRIPCION VARCHAR(4000),CONSTRAINT LOG_ERROR_PK PRIMARY KEY(LOG_ID))
CREATE MEMORY TABLE PUBLIC.PLANIFICACION(ID_PLAN INTEGER CONSTRAINT NNC_PLAN_ID_PLAN NOT NULL,F_ULTIMA_MODIFICACION DATE DEFAULT SYSDATE NOT NULL,DESCRIPCION VARCHAR(4000),CONSTRAINT PLANIFICACION_PK PRIMARY KEY(ID_PLAN))
CREATE MEMORY TABLE PUBLIC.SNAPSHOT(ID_CLIENTE INTEGER CONSTRAINT NNC_SNAP_ID_CLIENTE NOT NULL,ID_DESTINO INTEGER CONSTRAINT NNC_SNAP_ID_DESTINO NOT NULL,ID_INFORME INTEGER CONSTRAINT NNC_SNAP_ID_INFORME NOT NULL,ID_SNAPSHOT INTEGER CONSTRAINT NNC_SNAP_ID_SNAPSHOT NOT NULL,FECHA DATE CONSTRAINT NNC_SNAP_FECHA NOT NULL,CONSTRAINT SNAPSHOT_PK PRIMARY KEY(ID_SNAPSHOT,ID_CLIENTE,ID_DESTINO),CONSTRAINT SNAP_DEST_FK FOREIGN KEY(ID_CLIENTE,ID_DESTINO) REFERENCES PUBLIC.DESTINO(ID_CLIENTE,ID_DESTINO),CONSTRAINT SNAP_INFO_FK FOREIGN KEY(ID_INFORME) REFERENCES PUBLIC.INFORME(INFO_ID))
CREATE INDEX SNAP_INFO_FKX ON PUBLIC.SNAPSHOT(ID_INFORME)
CREATE INDEX SNAP_DEST_FKX ON PUBLIC.SNAPSHOT(ID_CLIENTE,ID_DESTINO)
CREATE MEMORY TABLE PUBLIC.TCON_1(ID_CLIENTE INTEGER NOT NULL,ID_DESTINO INTEGER NOT NULL,ID_INFORME INTEGER NOT NULL,ID_SNAPSHOT INTEGER NOT NULL,CONS_ID INTEGER NOT NULL,DATO1 INTEGER,DATO2 INTEGER,CONSTRAINT TCON_1_PK PRIMARY KEY(ID_CLIENTE,ID_DESTINO,ID_INFORME,ID_SNAPSHOT,CONS_ID),CONSTRAINT TCON_1_CONS_FK FOREIGN KEY(CONS_ID) REFERENCES PUBLIC.CONSULTA(CONS_ID),CONSTRAINT TCON_1_SNAP_FK FOREIGN KEY(ID_SNAPSHOT,ID_CLIENTE,ID_DESTINO) REFERENCES PUBLIC.SNAPSHOT(ID_SNAPSHOT,ID_CLIENTE,ID_DESTINO))
CREATE INDEX TCON_1_1_IDX ON PUBLIC.TCON_1(ID_CLIENTE,ID_DESTINO,CONS_ID,ID_INFORME,ID_SNAPSHOT)
CREATE INDEX TCON_1_CONS_FKX ON PUBLIC.TCON_1(CONS_ID)
CREATE INDEX TCON_1_SNAP_FKX ON PUBLIC.TCON_1(ID_SNAPSHOT,ID_CLIENTE,ID_DESTINO,ID_INFORME)
CREATE MEMORY TABLE PUBLIC.TIPO_DESTINO(ID_TIPO_DESTINO INTEGER CONSTRAINT NNC_TIPO_DEST_ID_TI_DEST NOT NULL,NOMBRE_CORTO VARCHAR(150) CONSTRAINT NNC_TIPO_DEST_NOMBRE_CORTO NOT NULL,DESCRIPCION VARCHAR(2000),CONSTRAINT TIPO_DESTINO_PK PRIMARY KEY(ID_TIPO_DESTINO))
ALTER TABLE PUBLIC.AGENTE ADD CONSTRAINT AGENTE_CLI_FK FOREIGN KEY(ID_CLIENTE) REFERENCES PUBLIC.CLIENTE(ID_CLIENTE)
ALTER TABLE PUBLIC.AGENTE_DESTINO ADD CONSTRAINT AGEN_DEST_DEST_FK FOREIGN KEY(ID_CLIENTE,ID_DESTINO) REFERENCES PUBLIC.DESTINO(ID_CLIENTE,ID_DESTINO)
ALTER TABLE PUBLIC.CONSULTA_TIPO_DESTINO ADD CONSTRAINT CONS_TIPO_DEST_TIPO_DEST_FK FOREIGN KEY(ID_TIPO_DESTINO) REFERENCES PUBLIC.TIPO_DESTINO(ID_TIPO_DESTINO)
ALTER TABLE PUBLIC.INFORME_TIPO_DESTINO ADD CONSTRAINT INF_TIPO_DEST_TIPO_DEST_FK FOREIGN KEY(ID_TIPO_DESTINO) REFERENCES PUBLIC.TIPO_DESTINO(ID_TIPO_DESTINO)
ALTER TABLE PUBLIC.INF_PLAN_DEST ADD CONSTRAINT INF_PLAN_DEST_PLAN_FK FOREIGN KEY(ID_PLAN) REFERENCES PUBLIC.PLANIFICACION(ID_PLAN)
ALTER TABLE PUBLIC.LINEA_CRON ADD CONSTRAINT LINEA_CRON_A_PLANIFICACION_FK FOREIGN KEY(ID_PLAN) REFERENCES PUBLIC.PLANIFICACION(ID_PLAN)
SET SCHEMA PUBLIC
CREATE TRIGGER PUBLIC.CLI_ID_CLIENTE_TRG BEFORE INSERT ON PUBLIC.CLIENTE REFERENCING NEW ROW AS NEWROW FOR EACH ROW BEGIN ATOMIC IF NEWROW.ID_CLIENTE IS NULL THEN SET NEWROW.ID_CLIENTE=NEXT VALUE FOR PUBLIC.CLI_ID_CLIENTE_SEQ;END IF;END
CREATE TRIGGER PUBLIC.CONS_CONS_ID_TRG BEFORE INSERT ON PUBLIC.CONSULTA REFERENCING NEW ROW AS NEWROW FOR EACH ROW BEGIN ATOMIC IF NEWROW.CONS_ID IS NULL THEN SET NEWROW.CONS_ID=NEXT VALUE FOR PUBLIC.CONS_CONS_ID_SEQ;END IF;END
CREATE TRIGGER PUBLIC.INFO_INFO_ID_TRG BEFORE INSERT ON PUBLIC.INFORME REFERENCING NEW ROW AS NEWROW FOR EACH ROW BEGIN ATOMIC IF NEWROW.INFO_ID IS NULL THEN SET NEWROW.INFO_ID=NEXT VALUE FOR PUBLIC.INFO_INFO_ID_SEQ;END IF;END
CREATE TRIGGER PUBLIC.LINEA_CRON_ID_LINEA_CRON_TRG BEFORE INSERT ON PUBLIC.LINEA_CRON REFERENCING NEW ROW AS NEWROW FOR EACH ROW BEGIN ATOMIC IF NEWROW.ID_LINEA_CRON IS NULL THEN SET NEWROW.ID_LINEA_CRON=NEXT VALUE FOR PUBLIC.LINEA_CRON_ID_LINEA_CRON_SEQ;END IF;END
CREATE TRIGGER PUBLIC.PLAN_ID_PLAN_TRG BEFORE INSERT ON PUBLIC.PLANIFICACION REFERENCING NEW ROW AS NEWROW FOR EACH ROW BEGIN ATOMIC IF NEWROW.ID_PLAN IS NULL THEN SET NEWROW.ID_PLAN=NEXT VALUE FOR PUBLIC.PLAN_ID_PLAN_SEQ;END IF;END
CREATE TRIGGER PUBLIC.TIPO_DEST_ID_TI_DEST_TRG BEFORE INSERT ON PUBLIC.TIPO_DESTINO REFERENCING NEW ROW AS NEWROW FOR EACH ROW BEGIN ATOMIC IF NEWROW.ID_TIPO_DESTINO IS NULL THEN SET NEWROW.ID_TIPO_DESTINO=NEXT VALUE FOR PUBLIC.TIPO_DEST_ID_TI_DEST_SEQ;END IF;END
CREATE TRIGGER PUBLIC.DESTINO_ID_DESTINO_TRG BEFORE INSERT ON PUBLIC.DESTINO REFERENCING NEW ROW AS NEWROW FOR EACH ROW BEGIN ATOMIC IF NEWROW.ID_DESTINO IS NULL THEN SET NEWROW.ID_DESTINO=NEXT VALUE FOR PUBLIC.DESTINO_ID_DESTINO_SEQ;END IF;END
SET DATABASE DEFAULT INITIAL SCHEMA PUBLIC
GRANT USAGE ON DOMAIN INFORMATION_SCHEMA.SQL_IDENTIFIER TO PUBLIC
GRANT USAGE ON DOMAIN INFORMATION_SCHEMA.YES_OR_NO TO PUBLIC
GRANT USAGE ON DOMAIN INFORMATION_SCHEMA.TIME_STAMP TO PUBLIC
GRANT USAGE ON DOMAIN INFORMATION_SCHEMA.CARDINAL_NUMBER TO PUBLIC
GRANT USAGE ON DOMAIN INFORMATION_SCHEMA.CHARACTER_DATA TO PUBLIC
GRANT DBA TO SA
